buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net/' }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.+', changing: true
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}

plugins {
    id "com.matthewprenger.cursegradle" version "1.4.0"
}

apply plugin: 'maven-publish'
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'idea'
apply plugin: 'org.spongepowered.mixin'

repositories { mavenLocal() }

group = "com.github.glitchfiend"
archivesBaseName = "${mod_name}"
version = "${minecraft_version}-${mod_version}.${System.getenv().BUILD_NUMBER}"

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

minecraft {
    mappings channel: 'official', version: minecraft_version
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client = {
            workingDirectory = project.file("run")
            source sourceSets.main
        }
        server = {
            workingDirectory = project.file("run")
            source sourceSets.main
        }
    }
}

// Configure  the source folders
sourceSets {
    main {
        java {
            srcDir "src/main/java"
            srcDir "public/src/main/java"
        }
        resources {
            srcDir "src/main/resources"
            srcDir "public/src/main/resources"
        }
    }
}

processResources {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

dependencies {
    minecraft 'net.minecraftforge:forge:' + minecraft_version + '-' + forge_version
    implementation fg.deobf("com.github.glitchfiend:SereneSeasons:${serene_seasons_version}")
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
}

mixin {
    add sourceSets.main, "${mod_id}.refmap.json"
    config "${mod_id}.mixins.json"
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'deobf'
}

task apiJar(type: Jar) {
    from(sourceSets.main.allJava) {
        include "${mod_id}/api/**"
    }
    from (sourceSets.main.output) {
        include 'LICENSE.txt'
        include "${mod_id}/api/**"
    }

    duplicatesStrategy = DuplicatesStrategy.INCLUDE
    classifier = 'api'
}

def changelog_file = rootProject.file("build/${mod_name}-${version}-changelog.txt")

curseforge {
    if (project.hasProperty('curseApiKey')) {
        apiKey = project.getProperty('curseApiKey')
    }
    project {
        id = mod_curseforge_id

        if (changelog_file.exists()) {
            changelog = changelog_file
        }

        releaseType = 'beta'
        addGameVersion minecraft_version

        mainArtifact(jar) {
            displayName = "${mod_display_name} ${version}"
        }

        addArtifact deobfJar
        addArtifact apiJar
    }
}

artifacts {
    if (changelog_file.exists()) {
        archives changelog_file
    }
    archives jar
    archives deobfJar
    archives apiJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            // We must use artifact jar to ensure the Forge dependency is excluded from the pom, breaking fg.deobf()
            artifact jar
            artifact deobfJar
            artifact apiJar
            groupId project.group
            artifactId project.archivesBaseName
            version project.version

            pom {
                name = project.mod_name
                description = project.mod_description
                url = project.mod_git_url
                scm {
                    url = project.mod_git_url
                    connection = project.mod_scm_url
                    developerConnection = project.mod_scm_url
                }
                issueManagement {
                    system = 'github'
                    url = project.mod_issues_url
                }
                licenses {
                    license {
                        name = 'All Rights Reserved'
                    }
                }
                developers {
                    developer {
                        id = 'adubbz'
                        name = 'Adubbz'
                    }
                    developer {
                        id = 'forstride'
                        name = 'Forstride'
                    }
                }
            }
        }
    }
    repositories {
        maven {
            url "https://maven.minecraftforge.net/releases/"
            authentication {
                basic(BasicAuthentication)
            }
            credentials {
                username = System.env.MAVEN_USER ?:'fake'
                password = System.env.MAVEN_PASSWORD ?:'news'
            }
        }
    }
}
